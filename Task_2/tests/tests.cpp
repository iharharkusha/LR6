#include <gtest/gtest.h>
#include <cstring>
#include "../header-files/utils.h"

// –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ä–∞–±–æ—Ç—É —Å –æ–¥–Ω–∏–º –±–∞–π—Ç–æ–º (ASCII —Å–∏–º–≤–æ–ª)
TEST(RemoveUtf8CharTest, RemoveSingleAsciiChar) {
    const char* text = "Hello, world!";
    const char* utf8_char = "H";
    char* result = removeUtf8Char(text, utf8_char);
    EXPECT_STREQ(result, "ello, world!");
    delete[] result;
}

// –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è UTF-8 —Å–∏–º–≤–æ–ª–∞ –¥–ª–∏–Ω–æ–π 2 –±–∞–π—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '¬©')
TEST(RemoveUtf8CharTest, RemoveTwoByteUtf8Char) {
    const char* text = "–¢–µ—Å—Ç–æ–≤—ã–π ¬© –ø—Ä–∏–º–µ—Ä";
    const char* utf8_char = "¬©";
    char* result = removeUtf8Char(text, utf8_char);
    EXPECT_STREQ(result, "–¢–µ—Å—Ç–æ–≤—ã–π  –ø—Ä–∏–º–µ—Ä");
    delete[] result;
}

// –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è UTF-8 —Å–∏–º–≤–æ–ª–∞ –¥–ª–∏–Ω–æ–π 3 –±–∞–π—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '‚Ç¨')
TEST(RemoveUtf8CharTest, RemoveThreeByteUtf8Char) {
    const char* text = "–¶–µ–Ω–∞ –≤ –µ–≤—Ä–æ: ‚Ç¨20";
    const char* utf8_char = "‚Ç¨";
    char* result = removeUtf8Char(text, utf8_char);
    EXPECT_STREQ(result, "–¶–µ–Ω–∞ –≤ –µ–≤—Ä–æ: 20");
    delete[] result;
}

// –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è UTF-8 —Å–∏–º–≤–æ–ª–∞ –¥–ª–∏–Ω–æ–π 4 –±–∞–π—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'üí©')
TEST(RemoveUtf8CharTest, RemoveFourByteUtf8Char) {
    const char* text = "–≠–º–æ–¥–∑–∏: üí©";
    const char* utf8_char = "üí©";
    char* result = removeUtf8Char(text, utf8_char);
    EXPECT_STREQ(result, "–≠–º–æ–¥–∑–∏: ");
    delete[] result;
}

// –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞, –∫–æ–≥–¥–∞ —Å–∏–º–≤–æ–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å—Ç—Ä–æ–∫–µ
TEST(RemoveUtf8CharTest, RemoveNonExistentUtf8Char) {
    const char* text = "–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞";
    const char* utf8_char = "¬©";
    char* result = removeUtf8Char(text, utf8_char);
    EXPECT_STREQ(result, "–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞");
    delete[] result;
}

// –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫—É –±–µ–∑ UTF-8 —Å–∏–º–≤–æ–ª–æ–≤
TEST(RemoveUtf8CharTest, RemoveFromTextWithoutUtf8Chars) {
    const char* text = "–ü—Ä–∏–≤–µ—Ç –ú–∏—Ä!";
    const char* utf8_char = "üôÇ";  // Emoji, 4 –±–∞–π—Ç–∞
    char* result = removeUtf8Char(text, utf8_char);
    EXPECT_STREQ(result, "–ü—Ä–∏–≤–µ—Ç –ú–∏—Ä!");
    delete[] result;
}

// –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
TEST(RemoveUtf8CharTest, EmptyStringTest) {
    const char* text = "";
    const char* utf8_char = "H";
    char* result = removeUtf8Char(text, utf8_char);
    EXPECT_STREQ(result, "");
    delete[] result;
}

// –¢–µ—Å—Ç 8: –ö—Ä–∞–π–Ω–∏–π —Å–ª—É—á–∞–π ‚Äî —Å—Ç—Ä–æ–∫–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞
TEST(RemoveUtf8CharTest, SingleCharacterString) {
    const char* text = "A";
    const char* utf8_char = "A";
    char* result = removeUtf8Char(text, utf8_char);
    EXPECT_STREQ(result, "");
    delete[] result;
}

// –¢–µ—Å—Ç 9: –ö—Ä–∞–π–Ω–∏–π —Å–ª—É—á–∞–π ‚Äî —Å—Ç—Ä–æ–∫–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
TEST(RemoveUtf8CharTest, RemoveRepeatedUtf8Char) {
    const char* text = "AAA";
    const char* utf8_char = "A";
    char* result = removeUtf8Char(text, utf8_char);
    EXPECT_STREQ(result, "");
    delete[] result;
}

// –¢–µ—Å—Ç 10: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫—É —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ä–∞–∑–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
TEST(RemoveUtf8CharTest, RemoveMultipleDifferentUtf8Chars) {
    const char* text = "–∞–≤–æ1–≤–∞—ã–ª–æ–∂–¥–æ–ª–¥–∞43";
    const char* utf8_char = "1";
    char* result = removeUtf8Char(text, utf8_char);
    EXPECT_STREQ(result, "–∞–≤–æ–≤–∞—ã–ª–æ–∂–¥–æ–ª–¥–∞43");
    delete[] result;
}
